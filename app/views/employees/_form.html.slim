- header_text = @employee.id.present? ? "Update Employee" : "New Employee"
h3.text-xl.font-bold.dark:text-white.px-6
  = header_text
= form_with(model: employee, data: { turbo: false }, id: dom_id(employee, "form"), class: "table min-w-full") do |form|
  .bg-white.px-4.pt-5.pb-4.sm:p-6.sm:pb-4
    div
      label.font-medium.text-gray-800
        | First Name
      = form.text_field :first_name, class: "w-full outline-none rounded bg-gray-100 p-2 mt-2 mb-3", required: true,maxlength: 25
    div
      label.font-medium.text-gray-800
        | Last Name
      = form.text_field :last_name, class: "w-full outline-none rounded bg-gray-100 p-2 mt-2 mb-3", required: true
    div
      label.font-medium.text-gray-800
        | Nick Name
      = form.text_field :nick_name, class: "w-full outline-none rounded bg-gray-100 p-2 mt-2 mb-3"
    div
      label.font-medium.text-gray-800
        | Phone 
        span.text-sm.text-gray-600
          | [123-456-7889]
      = form.text_field :phone, pattern: "[0-9]{3}-[0-9]{3}-[0-9]{4}" ,class: "w-full outline-none rounded bg-gray-100 p-2 mt-2 mb-3", required: true, maxlength: 12
    div
      label.font-medium.text-gray-800
        | Email
      = form.email_field :email, class: "w-full outline-none rounded bg-gray-100 p-2 mt-2 mb-3", required: true
    div
      - if @employee.errors.present?
        - @employee.errors.full_messages.each do |message|
          span.text-red-600
            = message
  .bg-gray-200.px-4.py-3.text-right
    = link_to "Cancel", employees_path, class: "w-1/3 text-center rounded-lg py-2 px-3 bg-gray-600 text-white inline-block font-medium cursor-pointer hover:bg-gray-700 ", data: { turbo: false }
    = form.submit class: "rounded-lg w-1/3 text-center py-2 px-3 bg-blue-600 text-white inline-block font-medium cursor-pointer"


javascript:
   document.addEventListener('DOMContentLoaded', function() {
     const phoneInput = document.getElementById('employee_phone');
     
     phoneInput.addEventListener('input', formatPhoneNumber);
     
     function formatPhoneNumber() {
       let value = phoneInput.value.replace(/\D/g, ''); // Remove non-digit characters
     
       if (value.length > 10) {
         value = value.slice(0, 10); 
       }
     
       const formattedValue = value.replace(/(\d{3})(\d{3})(\d{4})/, '$1-$2-$3');
       phoneInput.value = formattedValue;
     }
   });